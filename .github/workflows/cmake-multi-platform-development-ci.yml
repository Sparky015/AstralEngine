name: Development CI Build

on:
  workflow_dispatch:
  
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'Documentation/**'
      - 'docs/**'
      - '.gitignore'
      - 'Doxygen'
      - 'README.md'
      - 'GenerateVisualStudioProject.bat'
      - 'GenerateXcodeProject.sh'
      - 'LICENSE'
      
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'Documentation/**'
      - 'docs/**'
      - '.gitignore'
      - 'Doxygen'
      - 'README.md'
      - 'GenerateVisualStudioProject.bat'
      - 'GenerateXcodeProject.sh'
      - 'LICENSE'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      
      matrix:
        os: [windows-latest, macos-latest]
        build_type: [Debug]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'


    - name: Cache CMake Build
      uses: actions/cache@v4
      id: cache-cmake 
      with:
        path: ${{ github.workspace }}/cmake-build-${{ matrix.build_type }}
        key: ${{ runner.os }}-${{ matrix.build_type }}-build-${{ hashFiles('**/CMakeLists.txt', 'ThirdPartyLibraries/**') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.build_type }}-build-
    
        
        
    - name: Install Vulkan SDK
      uses: jakoch/install-vulkan-sdk-action@v1
      with:
          vulkan_version: 1.3.296.0
          optional_components: com.lunarg.vulkan.debug, com.lunarg.vulkan.vma
          install_runtime: true
          cache: true
          stripdown: true
        
    - name: Generate CMake Build System
      # Configures CMake to generate the build system
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      run: >
        cmake -B ${{ github.workspace }}/cmake-build-${{ matrix.build_type }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_CXX_STANDARD=20
        -S ${{ github.workspace }}

    - name: Build
      # Builds the project using the generated build system
      run: cmake --build ${{ github.workspace }}/cmake-build-${{ matrix.build_type }} --config ${{ matrix.build_type }}

    - name: Test
      # Runs tests only for Debug builds
      if: matrix.build_type == 'Debug'
      working-directory: ${{ github.workspace }}/cmake-build-${{ matrix.build_type }}/Tests/Astral-Runtime
      run: ctest -C ${{ matrix.build_type }} 

